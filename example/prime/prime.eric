# primality test

external (integer ch) integer putchar

function (integer i) integer putOnes
  putchar(i % 10 + 48)

function (integer i) integer putTens
  if i / 10 = 0
    putchar(32)
  else
    putOnes(i / 10)

function (integer i) integer puti
{
  putTens(i)
  putOnes(i)
}

function (integer n, integer i) boolean isDivisibleBy
  0 = n % i

function (integer n, integer i) boolean checkPrime
  if n / i < i
    true
  else if isDivisibleBy(n, i)
    false
  else
    checkPrime(n, i + 1)

function (integer n) boolean isPrime
  if n < 2
    false
  else if n = 2
    true
  else
    checkPrime(n, 2)

function (integer n) void testPrime
{
  puti(n)
  if isPrime(n)
  {
    putchar(32)
    putchar(33)
  }
  else 0
  putchar(10)
}

function (integer max, integer current) integer testPrimes
  if current < max
  {
    testPrime(current)
    testPrimes(max, current + 1)
  }
  else 0

testPrimes(100, 2)
